openapi: 3.0.1
info:
  title: "AuleWeb Services"
  description: |-
    Questo sistema Ã¨ volto alla gestione delle aule presenti in un qualsiasi Ateneo.
    //DA ESTENDERE
  contact:
    email: sviluppoWebAvanzato@student.univaq.it
  version: 1.0.0

servers:
  - url: 'http://localhost:8080/AuleWeb'

tags:
  - name: Autenticazione
  - name: Aule
  - name: Eventi

paths:
  '/rest/auth/login':
    post:
      summary: Autenticazione Amministratore
      description: Verifica le credenziali di un amministratore che tenta di autenticarsi nel sistema.
      operationId: doLogin #1
      tags:
        - Autenticazione
      requestBody:
        content:
          application/x-www-form-urlencoded: # vedere nel codice se usare json o form
            schema:
              $ref: '#/components/schemas/Credenziali'
        required: true
      responses:
        '200':
          description: Successful authentication
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        
        '500':
          $ref: '#/components/responses/GeneralError'

  '/rest/auth/logout':
    delete:
      summary: Deautenticazione Amministratore
      description: Consente il logout dell'amministratore.
      operationId: doLogout #1
      tags:
        - Autenticazione
      security:
        - bearerAuth: []
      responses:
        '204':
          description: successfull logout. No content
        
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        
        '500':
          $ref: '#/components/responses/GeneralError'

  '/rest/auth/refresh':
    get:
      summary: Refresh Token
      operationId: refresh
      description: creazione di un nuovo token per l'autenticazione
      tags:
        - Autenticazione
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            text/plain::
              schema:
                $ref: '#/components/schemas/Token'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'

  '/rest/aule/gruppi/':
    get:
      operationId: getidGruppi
      description: Elenco degli id dei gruppi delle aule
      tags:
        - Aule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaId'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'
  
  '/rest/aule/csv':
    get:
      operationId: exportAuleCsv #2
      description: Esportazione CSV configurazione aule.
      tags: 
        - Aule
      responses:
        '200':
          description: esportazione aule in CSV
          content:
            text/csv:
              schema:
                type: string
                example: |
                  ID,NOME AULA,LUOGO,EDIFICIO,PIANO,CAPIENZA,EMAIL RESPONSABILE,PRESE ELETTRICHE,PRESE RETE,NOTE,NOME GRUPPO
                  1,C1.10,Coppito,Renato Ricamo,0,50,sandro@gmail.com,9,5,Nota1,Gruppo1
                  2,A1.1,Coppito,Blocco 0,1,65,mario@gmail.com,20,11,Nota2,Gruppo2
                  3,A1.6,Coppito,Blocco 0,1,55,giovanna@gmail.com,15,14,Nota3,Gruppo3
                  4,C1.16,Coppito,Renato Ricamo,0,35,gilda@gmail.com,10,7,Nota4,Gruppo3
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'
    
    post:
      operationId: importAuleCsv #2
      description: Importazione CSV configurazione aule.
      tags: 
        - Aule
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  example: |
                    NOME AULA,LUOGO,EDIFICIO,PIANO,CAPIENZA,EMAIL RESPONSABILE,PRESE ELETTRICHE,PRESE RETE,NOTE,NOME GRUPPO
                    'C1.10', 'Coppito', 'Renato Ricamo', '0', '50', 'sandro@gmail.com', '9', '5', 'Nota1', 'NomeNuovoGruppo'
                    'A1.1', 'Coppito', 'Blocco 0', '1', '65', 'mario@gmail.com', '20', '11', 'Nota2', 'Gruppo1'
                    'A1.6', 'Coppito', 'Blocco 0', '1', '55', 'giovanna@gmail.com', '15', '14',,
      responses:
        '201':
          description: created
          headers:
            location:
              schema:
                type: string
                format: uri
                example: "http://localhost:8080/AuleWeb/rest/aule/csv"
        '500':
          $ref: '#/components/responses/GeneralError'
  
  
  '/rest/aule':
    get:
      operationId: getidAule
      description: Elenco degli id delle aule
      tags:
        - Aule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaId'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: addAula #3
      description: Inserimento di una nuova aula.
      tags:
        - Aule
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AulaPost'
      responses:
        '201':
          description: created
          headers:
            location:
              schema:
                type: string
                format: uri
        
        '500':
          $ref: '#/components/responses/GeneralError'
  
  '/rest/aule/{idAula}/assignGruppo':
    post:
      operationId: assignGruppo #4
      description: Assegnazione di un'aula a un gruppo.
      tags:
        - Aule
      security:
      - bearerAuth: []      
      parameters: 
        - $ref: '#/components/parameters/idAula'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_gruppo: 
                  type: integer
                  example: 1
      responses:
        '201':
          description: created
          headers:
            location:
              schema:
                type: string
                format: uri
        '500':
          $ref: '#/components/responses/GeneralError'
  
  '/rest/aule/{idAula}':
    get:
      operationId: getInfoAula #5
      description: Lettura delle informazioni di base relative a un'aula.
      tags:
        - Aule
      parameters: 
        - $ref: '#/components/parameters/idAula'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AulaGet'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GeneralError'
  
  '/rest/aule/{idAula}/attrezzature':  
    get:
      operationId: getAttrezzatureAula #6
      description: Lista delle attrezzature presenti in un'aula.
      tags: 
        - Aule
      parameters:
        - $ref: '#/components/parameters/idAula'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaAttrezzature'
        
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GeneralError'
    
  '/rest/eventi':
    post:
      tags: 
        - Eventi
      security:
      - bearerAuth: []
      operationId: addEvento #7
      description: Inserimento di un nuovo evento.
      requestBody: 
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/EventoPost'
      responses:
        '201':
          description: created
          headers:
            location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                type: string
                format: uri
        
        '500':
          $ref: '#/components/responses/GeneralError'
    
    get:
      operationId: getEventiForRange #12
      description: Esportazione di tutti gli eventi relativi a un certo intervallo di tempo in formato iCalendar.
      tags:
        - Eventi
      parameters: 
        - $ref: '#/components/parameters/rangeStart'
        - $ref: '#/components/parameters/rangeEnd'
      responses:
        '200':
          description: OK
          content:
            text/calendar:
              schema:
                type: string
                example: |
                  BEGIN:VCALENDAR
                  PRODID:AuleWebServices
                  VERSION:2.0
                  CALSCALE:GREGORIAN
                  END:VCALENDAR
        '404':
          $ref: '#/components/responses/NotFound'

  '/rest/eventi/ids':
    get:
      operationId: getidEventi
      description: Elenco degli id degli eventi
      tags:
        - Eventi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaId'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'

  '/rest/eventi/corsi':
    get:
      operationId: getidCorsi
      description: Elenco degli id dei corsi
      tags:
        - Eventi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaId'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'

  '/rest/eventi/idMaster/{idMaster}':
    get:
      operationId: getEventiIdMaster
      description: Elenco delle occorrenze dello stesso evento con stesso id_master (ricorrenza)
      tags:
        - Eventi
      parameters:
        - $ref: '#/components/parameters/idMaster'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eventi'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'
      
  '/rest/eventi/{evento}':
    patch:
      operationId: updateEvento #8
      description: Modifica di un evento.
      tags:
        - Eventi
      security:
      - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/idEvento'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventoPatch'
      responses:
        '204':
          description: no content
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'
    
    get:
      operationId: getInfoEvento #9
      description: Lettura delle informazioni su un evento.
      tags:
        - Eventi
      parameters:
        - $ref: '#/components/parameters/idEvento'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventoGet'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'
          
  '/rest/aule/{idAula}/eventi/':
    get:
      operationId: getEventiAulaSettimana #10
      description: Lista degli eventi associati a una specifica aula in una determinata settimana. In particolare data una settimana come queryParam vengono aggiunti 7 giorni in automatico
      tags:
        - Eventi
        - Aule
      parameters: 
        - $ref: '#/components/parameters/rangeStart'
        - $ref: '#/components/parameters/idAula'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eventi'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'
  
  '/rest/eventi/attuali':
    get:
      operationId: getEventiAttuali #11
      description: Lista degli eventi attuali (non ancora terminati).
      tags:
      - Eventi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eventi'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'

  '/rest/eventi/prossimi':
    get:
      operationId: getEventiProssimi #11
      description: Lista degli eventi delle n prossime ore (se non specificato, quelli delle prossime 3 ore).
      tags:
        - Eventi
      parameters: 
        - $ref: '#/components/parameters/oreProssime'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eventi'
        '500':
          $ref: '#/components/responses/GeneralError'
        '404':
          $ref: '#/components/responses/NotFound'


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: internalToken
  
  schemas:
    Credenziali:
      type: object
      properties:
        username:
          type: string
          example: username1
        password:
          type: string
          example: pass

    ListaGruppi:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
          nome:
            type: string
            example: "gruppo 1"
          descrizione:
            type: string
            example: "descrizione del gruppo di aule 1"


    Token:
      type: string
      example: "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VybmFtZTEiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvQXVsZVdlYi9yZXN0L2F1dGgvbG9naW4iLCJpYXQiOjE3MTgzNTY1NzAsImV4cCI6MTcxODM1ODA3MH0.jd6mLBzMO2__FGCAyFzm8J2Pc8IYqsOBR77wIErKxFk"

    ListaId:
      type: array
      items:
        type: integer
        format: int32
        example: 1,2,4,6,15

    Eventi:
      type: array
      items:
        $ref: '#/components/schemas/EventoGet'
        
    EventoGet:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        nome:
          type: string
          example: "nome evento 1"
        orario_inizio:
          type: string
          format: date-time
          example: "[2024, 6, 15, 9, 0, 15]"
        orario_fine:
          type: string
          format: date-time
          example: "[2024, 6, 15, 11, 0, 15]"
        descrizione:
          type: string
          example: "lezione sul calcolo differenziale"
        nome_organizzatore:
          type: string
          example: "Prof. Mario Rossi"
        email_responsabile:
          type: string
          format: email
          example: "m.rossi@universita.it"
        tipologia:
          type: string
          enum:
            - lezione
            - esame
            - seminario
            - parziale
            - riunione
            - lauree
            - altro
          example: "lezione"
        id_aula:
          type: integer
          format: int32
          example: 1
        id_corso:
          type: integer
          format: int32
          example: 1

    EventoPost:
      type: object
      properties:
        nome:
          type: string
          example: "nome evento 1"
        orario_inizio:
          type: string
          format: date-time
          example: "2024-06-20 11:00:00"
        orario_fine:
          type: string
          format: date-time
          example: "2024-06-01 13:00:00"
        descrizione:
          type: string
          example: "lezione sul calcolo differenziale"
        nome_organizzatore:
          type: string
          example: "Prof. Mario Rossi"
        email_responsabile:
          type: string
          format: email
          example: "m.rossi@universita.it"
        tipologia:
          type: string
          enum:
            - lezione
            - esame
            - seminario
            - parziale
            - riunione
            - lauree
            - altro
          example: "lezione"
        id_aula:
          type: integer
          format: int32
          example: 1
        id_corso:
          type: integer
          format: int32
          example: 1          
        tipo: 
          type: string
          enum:
            - settimanale
            - giornaliera
            - mensile
          example: "giornaliera"
        data_termine:
          type: string
          format: date-time
          example: "2024-06-20 13:00:00"
      required:
        - nome
        - orario_inizio
        - orario_fine
        - descrizione
        - nome_organizzatore
        - email_responsabile
        - tipologia
        - id_aula

    EventoPatch:
      type: object
      properties:
        nome:
          type: string
          example: "nome evento 1"
        orario_inizio:
          type: string
          format: date-time
          example: "2024-06-20 13:00:00"
        orario_fine:
          type: string
          format: date-time
          example: "2024-06-20 13:00:00"
        descrizione:
          type: string
          example: "lezione sul calcolo differenziale"
        nome_organizzatore:
          type: string
          example: "Prof. Mario Rossi"
        email_responsabile:
          type: string
          format: email
          example: "m.rossi@universita.it"
        tipologia:
          type: string
          enum:
            - lezione
            - esame
            - seminario
            - parziale
            - riunione
            - lauree
            - altro
          example: "lezione"
        id_aula:
          type: integer
          format: int32
          example: 1
        id_corso:
          type: integer
          format: int32
          example: 1          
        id_master:
          type: integer
          format: int32
          example: 1          

    Corso:
      type: object
      properties:
        nome:
          type: string
          example: "Web Engineering"
    
    ListaAttrezzature:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
          tipo:
            type: string
            example: "proiettore"
    
    AulaPost:
      type: object
      properties:
        nome:
          type: string
          example: "C1.10"
        luogo:
          type: string
          example: "Coppito"
        edificio:
          type: string
          example: "Renato Ricamo"
        piano:
          type: string
          example: "0"
        capienza:
          type: integer
          format: int32
          example: 50
        emailResponsabile:
          type: string
          example: "sandro@gmail.com"
        preseElettriche:
          type: integer
          format: int32
          example: 9
        preseRete:
          type: integer
          format: int32
          example: 5
        note:
          type: string
          example: "nota 1"
        
    AulaGet:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        nome:
          type: string
          example: "C1.10"
        luogo:
          type: string
          example: "Coppito"
        edificio:
          type: string
          example: "Renato Ricamo"
        piano:
          type: string
          example: "0"
        capienza:
          type: integer
          format: int32
          example: 50
        emailResponsabile:
          type: string
          example: "sandro@gmail.com"
        preseElettriche:
          type: integer
          format: int32
          example: 9
        preseRete:
          type: integer
          format: int32
          example: 5
        note:
          type: string
          example: "nota 1"
        attrezzatureAssociate:
          $ref: '#/components/schemas/ListaAttrezzature'
        gruppiAssociati:
          $ref: '#/components/schemas/ListaGruppi'
        
      
  parameters:
    idMaster:
      name: idMaster
      in: path
      required: true
      schema:
        type: integer
        format: int32
        example: 1
    
    idAula:
      name: idAula
      in: path
      required: true
      schema:
        type: integer
        format: int32
        example: 1
        
    idEvento:
      name: evento
      in: path
      required: true
      schema:
        type: integer
        format: int32
        example: 1
    
    rangeStart:
      in: query
      name: rangeStart
      required: true
      schema:
        type: string
        format: date-time
        example: "2024-06-20T13:00:00"
    
    rangeEnd:
      in: query
      name: rangeEnd
      required: true
      schema:
        type: string
        format: date-time
        example: "2024-06-20T13:00:00"

    oreProssime:
      in: query
      name: oreProssime
      required: false
      schema:
        type: integer
        example: 3
  
  responses:
    GeneralError:
      description: errore generale
      content:
        text/plain:
          schema:
            type: string
            example: "Errore da parte del server"
    
    UnauthorizedError:
      description: Operazione non autorizzata
      content:
        text/plain:
          schema:
            type: string
            example: "Operazione non autorizzata. Effettua il login"
    
    NotFound:
      description: elemento non trovato
      content: 
        text/plain:
          schema:
            type: string
            example: "Elemento insesistente"